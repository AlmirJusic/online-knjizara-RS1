// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using online_knjizara.EF;

namespace online_knjizara.Migrations
{
    [DbContext(typeof(OnlineKnjizaraDbContext))]
    [Migration("20210927151952_ADDNazivOdlomka")]
    partial class ADDNazivOdlomka
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("online_knjizara.EntityModels.Autor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Grad_ID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Grad_ID");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.AutorizacijskiToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IpAdresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnickiNalozi_ID")
                        .HasColumnType("int");

                    b.Property<string>("Vrijednost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VrijemeEvidentiranja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("KorisnickiNalozi_ID");

                    b.ToTable("AutorizacijskiToken");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.CitaocKorisnik", b =>
                {
                    b.Property<int>("CitaocKorisnik_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KorisnickiNalog_ID")
                        .HasColumnType("int");

                    b.Property<int>("Korisnik_ID")
                        .HasColumnType("int");

                    b.HasKey("CitaocKorisnik_ID");

                    b.HasIndex("KorisnickiNalog_ID");

                    b.HasIndex("Korisnik_ID");

                    b.ToTable("CitaocKorisnik");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Drzava", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Grad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Drzava_ID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Drzava_ID");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Izdavac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Grad_ID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Grad_ID");

                    b.ToTable("Izdavac");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Knjiga", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Autor_ID")
                        .HasColumnType("int");

                    b.Property<float>("Cijena")
                        .HasColumnType("real");

                    b.Property<DateTime>("DatumIzdavanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("Izdavac_ID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Odlomak_ID")
                        .HasColumnType("int");

                    b.Property<int>("Skladiste_ID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Stanje_ID")
                        .HasColumnType("int");

                    b.Property<int>("Zanr_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Autor_ID");

                    b.HasIndex("Izdavac_ID");

                    b.HasIndex("Odlomak_ID");

                    b.HasIndex("Skladiste_ID");

                    b.HasIndex("Stanje_ID");

                    b.HasIndex("Zanr_ID");

                    b.ToTable("Knjiga");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.KomentarOcjena", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Knjiga_ID")
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Korisnik_ID")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Knjiga_ID");

                    b.HasIndex("Korisnik_ID");

                    b.ToTable("KomentarOcjena");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.KorisnickiNalozi", b =>
                {
                    b.Property<int>("KorisnickiNalog_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnickiNalog_ID");

                    b.ToTable("KorisnickiNalozi");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Grad_ID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Grad_ID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Narudzba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cijena")
                        .HasColumnType("real");

                    b.Property<DateTime>("DatumVrijeme")
                        .HasColumnType("datetime2");

                    b.Property<int>("Knjiga_ID")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("Korisnik_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Knjiga_ID");

                    b.HasIndex("Korisnik_ID");

                    b.ToTable("Narudzba");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Obavijesti", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ID");

                    b.ToTable("Obavijesti");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Odlomak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivOdlomka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Odlomak");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Skladiste", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Grad_ID")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Grad_ID");

                    b.ToTable("Skladiste");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Stanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipStanja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Stanje");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Zanr", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Zanr");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Zaposlenici", b =>
                {
                    b.Property<int>("Zaposlenik_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KorisnickiNalog_ID")
                        .HasColumnType("int");

                    b.Property<int>("Korisnik_ID")
                        .HasColumnType("int");

                    b.Property<string>("StrucnaSprema")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Zaposlenik_ID");

                    b.HasIndex("KorisnickiNalog_ID");

                    b.HasIndex("Korisnik_ID");

                    b.ToTable("Zaposlenici");
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Autor", b =>
                {
                    b.HasOne("online_knjizara.EntityModels.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("Grad_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("online_knjizara.EntityModels.AutorizacijskiToken", b =>
                {
                    b.HasOne("online_knjizara.EntityModels.KorisnickiNalozi", "KorisnickiNalozi")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalozi_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("online_knjizara.EntityModels.CitaocKorisnik", b =>
                {
                    b.HasOne("online_knjizara.EntityModels.KorisnickiNalozi", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalog_ID");

                    b.HasOne("online_knjizara.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("Korisnik_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Grad", b =>
                {
                    b.HasOne("online_knjizara.EntityModels.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("Drzava_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Izdavac", b =>
                {
                    b.HasOne("online_knjizara.EntityModels.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("Grad_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Knjiga", b =>
                {
                    b.HasOne("online_knjizara.EntityModels.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("Autor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("online_knjizara.EntityModels.Izdavac", "Izdavac")
                        .WithMany()
                        .HasForeignKey("Izdavac_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("online_knjizara.EntityModels.Odlomak", "Odlomak")
                        .WithMany()
                        .HasForeignKey("Odlomak_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("online_knjizara.EntityModels.Skladiste", "Skladiste")
                        .WithMany()
                        .HasForeignKey("Skladiste_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("online_knjizara.EntityModels.Stanje", "Stanje")
                        .WithMany()
                        .HasForeignKey("Stanje_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("online_knjizara.EntityModels.Zanr", "Zanr")
                        .WithMany()
                        .HasForeignKey("Zanr_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("online_knjizara.EntityModels.KomentarOcjena", b =>
                {
                    b.HasOne("online_knjizara.EntityModels.Knjiga", "Knjiga")
                        .WithMany()
                        .HasForeignKey("Knjiga_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("online_knjizara.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("Korisnik_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Korisnik", b =>
                {
                    b.HasOne("online_knjizara.EntityModels.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("Grad_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Narudzba", b =>
                {
                    b.HasOne("online_knjizara.EntityModels.Knjiga", "Knjiga")
                        .WithMany()
                        .HasForeignKey("Knjiga_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("online_knjizara.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("Korisnik_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Skladiste", b =>
                {
                    b.HasOne("online_knjizara.EntityModels.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("Grad_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("online_knjizara.EntityModels.Zaposlenici", b =>
                {
                    b.HasOne("online_knjizara.EntityModels.KorisnickiNalozi", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalog_ID");

                    b.HasOne("online_knjizara.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("Korisnik_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
